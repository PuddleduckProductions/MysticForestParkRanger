### YamlMime:ManagedReference
items:
- uid: Interactions.Behaviors.DirtPatch
  commentId: T:Interactions.Behaviors.DirtPatch
  id: DirtPatch
  parent: Interactions.Behaviors
  children:
  - Interactions.Behaviors.DirtPatch.#ctor(Interactions.Interaction)
  - Interactions.Behaviors.DirtPatch.CanInteract(Interactions.Interaction)
  - Interactions.Behaviors.DirtPatch.Interact
  - Interactions.Behaviors.DirtPatch.Interact(Interactions.Interaction)
  - Interactions.Behaviors.DirtPatch.activateOnPlant
  - Interactions.Behaviors.DirtPatch.seedsToAccept
  langs:
  - csharp
  - vb
  name: DirtPatch
  nameWithType: DirtPatch
  fullName: Interactions.Behaviors.DirtPatch
  type: Class
  source:
    remote:
      path: Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
      branch: master
      repo: https://github.com/PuddleduckProductions/MysticForestParkRanger.git
    id: DirtPatch
    path: ../Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
    startLine: 114
  assemblies:
  - ScriptAssembly
  namespace: Interactions.Behaviors
  syntax:
    content: >-
      [Serializable]

      [InteractionType("Plants/DirtPatch")]

      public class DirtPatch : InteractionBehavior
    content.vb: >-
      <Serializable>

      <InteractionType("Plants/DirtPatch")>

      Public Class DirtPatch Inherits InteractionBehavior
  inheritance:
  - System.Object
  - Interactions.Behaviors.InteractionBehavior
  inheritedMembers:
  - Interactions.Behaviors.InteractionBehavior.interactionObject
  - Interactions.Behaviors.InteractionBehavior.GameObjectStart
  - Interactions.Behaviors.InteractionBehavior.Update
  - Interactions.Behaviors.InteractionBehavior.EndInteraction
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: Interactions.Behaviors.InteractionType
    ctor: Interactions.Behaviors.InteractionType.#ctor(System.String)
    arguments:
    - type: System.String
      value: Plants/DirtPatch
- uid: Interactions.Behaviors.DirtPatch.seedsToAccept
  commentId: F:Interactions.Behaviors.DirtPatch.seedsToAccept
  id: seedsToAccept
  parent: Interactions.Behaviors.DirtPatch
  langs:
  - csharp
  - vb
  name: seedsToAccept
  nameWithType: DirtPatch.seedsToAccept
  fullName: Interactions.Behaviors.DirtPatch.seedsToAccept
  type: Field
  source:
    remote:
      path: Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
      branch: master
      repo: https://github.com/PuddleduckProductions/MysticForestParkRanger.git
    id: seedsToAccept
    path: ../Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
    startLine: 120
  assemblies:
  - ScriptAssembly
  namespace: Interactions.Behaviors
  summary: The <xref href="Interactions.Behaviors.Seed.seedName" data-throw-if-not-resolved="false"></xref> to accept. Will allow any seeds if blank.
  example: []
  syntax:
    content: >-
      [Tooltip("The seedNames to accept. Will allow any seeds if blank.")]

      public List<string> seedsToAccept
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <Tooltip("The seedNames to accept. Will allow any seeds if blank.")>

      Public seedsToAccept As List(Of String)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The seedNames to accept. Will allow any seeds if blank.
- uid: Interactions.Behaviors.DirtPatch.activateOnPlant
  commentId: F:Interactions.Behaviors.DirtPatch.activateOnPlant
  id: activateOnPlant
  parent: Interactions.Behaviors.DirtPatch
  langs:
  - csharp
  - vb
  name: activateOnPlant
  nameWithType: DirtPatch.activateOnPlant
  fullName: Interactions.Behaviors.DirtPatch.activateOnPlant
  type: Field
  source:
    remote:
      path: Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
      branch: master
      repo: https://github.com/PuddleduckProductions/MysticForestParkRanger.git
    id: activateOnPlant
    path: ../Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
    startLine: 126
  assemblies:
  - ScriptAssembly
  namespace: Interactions.Behaviors
  summary: A reference to a GameObject to set active when something has been planted here.
  example: []
  syntax:
    content: >-
      [Tooltip("A reference to a GameObject to set active when something has been planted here.")]

      public GameObject activateOnPlant
    return:
      type: UnityEngine.GameObject
    content.vb: >-
      <Tooltip("A reference to a GameObject to set active when something has been planted here.")>

      Public activateOnPlant As GameObject
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: A reference to a GameObject to set active when something has been planted here.
- uid: Interactions.Behaviors.DirtPatch.#ctor(Interactions.Interaction)
  commentId: M:Interactions.Behaviors.DirtPatch.#ctor(Interactions.Interaction)
  id: '#ctor(Interactions.Interaction)'
  parent: Interactions.Behaviors.DirtPatch
  langs:
  - csharp
  - vb
  name: DirtPatch(Interaction)
  nameWithType: DirtPatch.DirtPatch(Interaction)
  fullName: Interactions.Behaviors.DirtPatch.DirtPatch(Interactions.Interaction)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
      branch: master
      repo: https://github.com/PuddleduckProductions/MysticForestParkRanger.git
    id: .ctor
    path: ../Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
    startLine: 127
  assemblies:
  - ScriptAssembly
  namespace: Interactions.Behaviors
  syntax:
    content: public DirtPatch(Interaction parent)
    parameters:
    - id: parent
      type: Interactions.Interaction
    content.vb: Public Sub New(parent As Interaction)
  overload: Interactions.Behaviors.DirtPatch.#ctor*
  nameWithType.vb: DirtPatch.New(Interaction)
  fullName.vb: Interactions.Behaviors.DirtPatch.New(Interactions.Interaction)
  name.vb: New(Interaction)
- uid: Interactions.Behaviors.DirtPatch.Interact
  commentId: M:Interactions.Behaviors.DirtPatch.Interact
  id: Interact
  parent: Interactions.Behaviors.DirtPatch
  langs:
  - csharp
  - vb
  name: Interact()
  nameWithType: DirtPatch.Interact()
  fullName: Interactions.Behaviors.DirtPatch.Interact()
  type: Method
  source:
    remote:
      path: Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
      branch: master
      repo: https://github.com/PuddleduckProductions/MysticForestParkRanger.git
    id: Interact
    path: ../Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
    startLine: 129
  assemblies:
  - ScriptAssembly
  namespace: Interactions.Behaviors
  summary: >-
    Function to call when the object is interacted with (i.e., Space is pressed)

    Called by <xref href="Interactions.InteractionManager" data-throw-if-not-resolved="false"></xref>.

    This will still be called even while <xref href="Interactions.Behaviors.InteractionBehavior.Update" data-throw-if-not-resolved="false"></xref> returns true, as long as this object is being

    interacted with and space is being pressed.
  example: []
  syntax:
    content: public override void Interact()
    content.vb: Public Overrides Sub Interact()
  overridden: Interactions.Behaviors.InteractionBehavior.Interact
  overload: Interactions.Behaviors.DirtPatch.Interact*
- uid: Interactions.Behaviors.DirtPatch.Interact(Interactions.Interaction)
  commentId: M:Interactions.Behaviors.DirtPatch.Interact(Interactions.Interaction)
  id: Interact(Interactions.Interaction)
  parent: Interactions.Behaviors.DirtPatch
  langs:
  - csharp
  - vb
  name: Interact(Interaction)
  nameWithType: DirtPatch.Interact(Interaction)
  fullName: Interactions.Behaviors.DirtPatch.Interact(Interactions.Interaction)
  type: Method
  source:
    remote:
      path: Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
      branch: master
      repo: https://github.com/PuddleduckProductions/MysticForestParkRanger.git
    id: Interact
    path: ../Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
    startLine: 133
  assemblies:
  - ScriptAssembly
  namespace: Interactions.Behaviors
  summary: >-
    Function to call when the object is interacted with another interaction.

    This will still be called even while <xref href="Interactions.Behaviors.InteractionBehavior.Update" data-throw-if-not-resolved="false"></xref> returns true, as long as this object is being

    interacted with and space is being pressed on another object.
  example: []
  syntax:
    content: public override void Interact(Interaction other)
    parameters:
    - id: other
      type: Interactions.Interaction
      description: The other interaction
    content.vb: Public Overrides Sub Interact(other As Interaction)
  overridden: Interactions.Behaviors.InteractionBehavior.Interact(Interactions.Interaction)
  overload: Interactions.Behaviors.DirtPatch.Interact*
- uid: Interactions.Behaviors.DirtPatch.CanInteract(Interactions.Interaction)
  commentId: M:Interactions.Behaviors.DirtPatch.CanInteract(Interactions.Interaction)
  id: CanInteract(Interactions.Interaction)
  parent: Interactions.Behaviors.DirtPatch
  langs:
  - csharp
  - vb
  name: CanInteract(Interaction)
  nameWithType: DirtPatch.CanInteract(Interaction)
  fullName: Interactions.Behaviors.DirtPatch.CanInteract(Interactions.Interaction)
  type: Method
  source:
    remote:
      path: Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
      branch: master
      repo: https://github.com/PuddleduckProductions/MysticForestParkRanger.git
    id: CanInteract
    path: ../Assets/Scripts/CharacterController/Interactions/Seeds/PlantInteractions.cs
    startLine: 145
  assemblies:
  - ScriptAssembly
  namespace: Interactions.Behaviors
  summary: >-
    Should we allow interactions currently?

    Default setting is as long as you're not holdign something else.
  example: []
  syntax:
    content: public override bool CanInteract(Interaction other = null)
    parameters:
    - id: other
      type: Interactions.Interaction
      description: The other object that wants to interact with us. Can be null.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function CanInteract(other As Interaction = Nothing) As Boolean
  overridden: Interactions.Behaviors.InteractionBehavior.CanInteract(Interactions.Interaction)
  overload: Interactions.Behaviors.DirtPatch.CanInteract*
references:
- uid: Interactions.Behaviors
  commentId: N:Interactions.Behaviors
  href: Interactions.html
  name: Interactions.Behaviors
  nameWithType: Interactions.Behaviors
  fullName: Interactions.Behaviors
  spec.csharp:
  - uid: Interactions
    name: Interactions
    href: Interactions.html
  - name: .
  - uid: Interactions.Behaviors
    name: Behaviors
    href: Interactions.Behaviors.html
  spec.vb:
  - uid: Interactions
    name: Interactions
    href: Interactions.html
  - name: .
  - uid: Interactions.Behaviors
    name: Behaviors
    href: Interactions.Behaviors.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Interactions.Behaviors.InteractionBehavior
  commentId: T:Interactions.Behaviors.InteractionBehavior
  parent: Interactions.Behaviors
  href: Interactions.Behaviors.InteractionBehavior.html
  name: InteractionBehavior
  nameWithType: InteractionBehavior
  fullName: Interactions.Behaviors.InteractionBehavior
- uid: Interactions.Behaviors.InteractionBehavior.interactionObject
  commentId: F:Interactions.Behaviors.InteractionBehavior.interactionObject
  parent: Interactions.Behaviors.InteractionBehavior
  href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_interactionObject
  name: interactionObject
  nameWithType: InteractionBehavior.interactionObject
  fullName: Interactions.Behaviors.InteractionBehavior.interactionObject
- uid: Interactions.Behaviors.InteractionBehavior.GameObjectStart
  commentId: M:Interactions.Behaviors.InteractionBehavior.GameObjectStart
  parent: Interactions.Behaviors.InteractionBehavior
  href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_GameObjectStart
  name: GameObjectStart()
  nameWithType: InteractionBehavior.GameObjectStart()
  fullName: Interactions.Behaviors.InteractionBehavior.GameObjectStart()
  spec.csharp:
  - uid: Interactions.Behaviors.InteractionBehavior.GameObjectStart
    name: GameObjectStart
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_GameObjectStart
  - name: (
  - name: )
  spec.vb:
  - uid: Interactions.Behaviors.InteractionBehavior.GameObjectStart
    name: GameObjectStart
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_GameObjectStart
  - name: (
  - name: )
- uid: Interactions.Behaviors.InteractionBehavior.Update
  commentId: M:Interactions.Behaviors.InteractionBehavior.Update
  parent: Interactions.Behaviors.InteractionBehavior
  href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_Update
  name: Update()
  nameWithType: InteractionBehavior.Update()
  fullName: Interactions.Behaviors.InteractionBehavior.Update()
  spec.csharp:
  - uid: Interactions.Behaviors.InteractionBehavior.Update
    name: Update
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Interactions.Behaviors.InteractionBehavior.Update
    name: Update
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_Update
  - name: (
  - name: )
- uid: Interactions.Behaviors.InteractionBehavior.EndInteraction
  commentId: M:Interactions.Behaviors.InteractionBehavior.EndInteraction
  parent: Interactions.Behaviors.InteractionBehavior
  href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_EndInteraction
  name: EndInteraction()
  nameWithType: InteractionBehavior.EndInteraction()
  fullName: Interactions.Behaviors.InteractionBehavior.EndInteraction()
  spec.csharp:
  - uid: Interactions.Behaviors.InteractionBehavior.EndInteraction
    name: EndInteraction
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_EndInteraction
  - name: (
  - name: )
  spec.vb:
  - uid: Interactions.Behaviors.InteractionBehavior.EndInteraction
    name: EndInteraction
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_EndInteraction
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Interactions.Behaviors.Seed.seedName
  commentId: F:Interactions.Behaviors.Seed.seedName
  href: Interactions.Behaviors.Seed.html#Interactions_Behaviors_Seed_seedName
  name: seedName
  nameWithType: Seed.seedName
  fullName: Interactions.Behaviors.Seed.seedName
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Interactions.Behaviors.DirtPatch.#ctor*
  commentId: Overload:Interactions.Behaviors.DirtPatch.#ctor
  href: Interactions.Behaviors.DirtPatch.html#Interactions_Behaviors_DirtPatch__ctor_Interactions_Interaction_
  name: DirtPatch
  nameWithType: DirtPatch.DirtPatch
  fullName: Interactions.Behaviors.DirtPatch.DirtPatch
  nameWithType.vb: DirtPatch.New
  fullName.vb: Interactions.Behaviors.DirtPatch.New
  name.vb: New
- uid: Interactions.Interaction
  commentId: T:Interactions.Interaction
  parent: Interactions
  href: Interactions.Interaction.html
  name: Interaction
  nameWithType: Interaction
  fullName: Interactions.Interaction
- uid: Interactions
  commentId: N:Interactions
  href: Interactions.html
  name: Interactions
  nameWithType: Interactions
  fullName: Interactions
- uid: Interactions.InteractionManager
  commentId: T:Interactions.InteractionManager
  href: Interactions.InteractionManager.html
  name: InteractionManager
  nameWithType: InteractionManager
  fullName: Interactions.InteractionManager
- uid: Interactions.Behaviors.InteractionBehavior.Interact
  commentId: M:Interactions.Behaviors.InteractionBehavior.Interact
  parent: Interactions.Behaviors.InteractionBehavior
  href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_Interact
  name: Interact()
  nameWithType: InteractionBehavior.Interact()
  fullName: Interactions.Behaviors.InteractionBehavior.Interact()
  spec.csharp:
  - uid: Interactions.Behaviors.InteractionBehavior.Interact
    name: Interact
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_Interact
  - name: (
  - name: )
  spec.vb:
  - uid: Interactions.Behaviors.InteractionBehavior.Interact
    name: Interact
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_Interact
  - name: (
  - name: )
- uid: Interactions.Behaviors.DirtPatch.Interact*
  commentId: Overload:Interactions.Behaviors.DirtPatch.Interact
  href: Interactions.Behaviors.DirtPatch.html#Interactions_Behaviors_DirtPatch_Interact
  name: Interact
  nameWithType: DirtPatch.Interact
  fullName: Interactions.Behaviors.DirtPatch.Interact
- uid: Interactions.Behaviors.InteractionBehavior.Interact(Interactions.Interaction)
  commentId: M:Interactions.Behaviors.InteractionBehavior.Interact(Interactions.Interaction)
  parent: Interactions.Behaviors.InteractionBehavior
  href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_Interact_Interactions_Interaction_
  name: Interact(Interaction)
  nameWithType: InteractionBehavior.Interact(Interaction)
  fullName: Interactions.Behaviors.InteractionBehavior.Interact(Interactions.Interaction)
  spec.csharp:
  - uid: Interactions.Behaviors.InteractionBehavior.Interact(Interactions.Interaction)
    name: Interact
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_Interact_Interactions_Interaction_
  - name: (
  - uid: Interactions.Interaction
    name: Interaction
    href: Interactions.Interaction.html
  - name: )
  spec.vb:
  - uid: Interactions.Behaviors.InteractionBehavior.Interact(Interactions.Interaction)
    name: Interact
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_Interact_Interactions_Interaction_
  - name: (
  - uid: Interactions.Interaction
    name: Interaction
    href: Interactions.Interaction.html
  - name: )
- uid: Interactions.Behaviors.InteractionBehavior.CanInteract(Interactions.Interaction)
  commentId: M:Interactions.Behaviors.InteractionBehavior.CanInteract(Interactions.Interaction)
  parent: Interactions.Behaviors.InteractionBehavior
  href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_CanInteract_Interactions_Interaction_
  name: CanInteract(Interaction)
  nameWithType: InteractionBehavior.CanInteract(Interaction)
  fullName: Interactions.Behaviors.InteractionBehavior.CanInteract(Interactions.Interaction)
  spec.csharp:
  - uid: Interactions.Behaviors.InteractionBehavior.CanInteract(Interactions.Interaction)
    name: CanInteract
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_CanInteract_Interactions_Interaction_
  - name: (
  - uid: Interactions.Interaction
    name: Interaction
    href: Interactions.Interaction.html
  - name: )
  spec.vb:
  - uid: Interactions.Behaviors.InteractionBehavior.CanInteract(Interactions.Interaction)
    name: CanInteract
    href: Interactions.Behaviors.InteractionBehavior.html#Interactions_Behaviors_InteractionBehavior_CanInteract_Interactions_Interaction_
  - name: (
  - uid: Interactions.Interaction
    name: Interaction
    href: Interactions.Interaction.html
  - name: )
- uid: Interactions.Behaviors.DirtPatch.CanInteract*
  commentId: Overload:Interactions.Behaviors.DirtPatch.CanInteract
  href: Interactions.Behaviors.DirtPatch.html#Interactions_Behaviors_DirtPatch_CanInteract_Interactions_Interaction_
  name: CanInteract
  nameWithType: DirtPatch.CanInteract
  fullName: Interactions.Behaviors.DirtPatch.CanInteract
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
